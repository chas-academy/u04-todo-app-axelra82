# https://docs.docker.com/compose/compose-file/compose-file-v3/
# docker -v in shell for local docker engine
version: "3.8"

services:
  # PHP
  php:
    build:
      context: "./php/"
      args:
        PHP_VERSION: ${PHP_VERSION}
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: php
    links:
      - mysql

  # WWW
  apache:
    build:
      context: "./apache/"
      args:
        APACHE_VERSION: ${APACHE_VERSION}
    depends_on:
      - php
      - mysql
    links:
      - mysql
    ports:
      - "8080:80"
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: apache

  # DB
  mysql:
    image: mysql:${MYSQL_VERSION}
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - data:/var/lib/mysql
    # The default MySQL installation only creates the "root" administrative account
    # create new users using docker-compose exec
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    container_name: mysql

  #PMA
  phpmyadmin:
    depends_on:
      - mysql
    links:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_USERNAME: "${DB_USERNAME}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    volumes:
      - /sessions
    container_name: phpmyadmin

  # NODEJS
  nodejs:
    image: node:latest
    working_dir: /home/node/app
    ports:
      - "3000:3000"
    volumes:
      - "./:/home/node/app"
    depends_on:
      - "apache"
    command: npm run start
    container_name: nodejs

volumes:
  data:
